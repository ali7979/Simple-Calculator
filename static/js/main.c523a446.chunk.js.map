{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["App","useState","exp","setexp","ops","cln","fn","e","console","log","target","innerText","value","res","eval","bck","slice","className","onClick","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q3BAKA,SAASA,MAET,cAAqBC,oDAAS,IAA9B,iKAAOC,IAAP,cAAWC,OAAX,cACMC,IAAI,CAAC,IAAI,IAAI,IAAI,KACnBC,IAAI,WACNF,OAAO,KAILG,GAAG,SAAHA,GAAIC,GACRC,QAAQC,IAAIF,EAAEG,OAAOC,WACrB,IAAIC,MAAML,EAAEG,OAAOC,UAEnB,GADAR,OAAOD,IAAIU,OACD,KAAPA,MACH,CACE,IAAIC,IAAIC,KAAKZ,KACbM,QAAQC,IAAI,OACZD,QAAQC,IAAII,KACZV,OAAO,gBAAD,OAAiBU,QAOrBE,IAAI,WACNZ,OAAOD,IAAIc,MAAM,GAAI,KAKrB,OACE,6HACA,kEAAKC,UAAU,OAAf,SAEE,mEAAKA,UAAU,MAAf,UAEE,kEAAKA,UAAU,QAAf,yBACA,mEAAKA,UAAU,MAAf,UAAsBf,IACxB,qEAAQe,UAAU,UAAUC,QAASH,IAArC,SAA0C,gEAAGI,MAAM,kCAExD,mEAAKF,UAAU,SAAf,UACE,qEAAQC,QAASb,IAAKY,UAAU,OAAhC,gBACA,qEAAQC,QAASZ,GAAIW,UAAU,OAA/B,iBACA,qEAAQC,QAASZ,GAAIW,UAAU,OAA/B,eACA,qEAAQC,QAASZ,GAAIW,UAAU,OAA/B,kBAOF,mEAAKA,UAAU,SAAf,UACE,qEAAQC,QAASZ,GAAIW,UAAU,MAA/B,eACA,qEAAQC,QAASZ,GAAIW,UAAU,MAA/B,eACA,qEAAQC,QAASZ,GAAIW,UAAU,MAA/B,eACA,qEAAQC,QAASZ,GAAIW,UAAU,OAA/B,kBAGF,mEAAKA,UAAU,SAAf,UACE,qEAASC,QAASZ,GAAIW,UAAU,MAAhC,eACA,qEAAQC,QAASZ,GAAKW,UAAU,MAAhC,eACA,qEAASC,QAASZ,GAAIW,UAAU,MAAhC,eACA,qEAAQC,QAASZ,GAAKW,UAAU,OAAhC,kBAKF,mEAAKA,UAAU,SAAf,UACE,qEAASC,QAASZ,GAAKW,UAAU,MAAjC,eACA,qEAASC,QAASZ,GAAIW,UAAU,MAAhC,eACA,qEAASC,QAASZ,GAAIW,UAAU,MAAhC,eACA,qEAAQC,QAASZ,GAAKW,UAAU,OAAhC,kBAIF,mEAAKA,UAAU,SAAf,UAEE,qEAASC,QAASZ,GAAIW,UAAU,OAAhC,eACA,qEAAQC,QAASZ,GAAKW,UAAU,MAAhC,eACA,qEAAQC,QAASZ,GAAKW,UAAU,OAAhC,yBAUYjB,2B,oDC/FA,K,0GCYAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC/B,EAAA,EAAD,MAEFgC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c523a446.chunk.js","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n\nconst [exp,setexp] = useState(\"\")\nconst ops=['/','*','+','-']\nvar cln=()=>{\n  setexp([])\n}\n\n \nvar fn=(e)=>{\nconsole.log(e.target.innerText);\nvar value=e.target.innerText\nsetexp(exp+value)\nif(value==\"=\")\n{\n  var res=eval(exp)\n  console.log(\"ali\")\n  console.log(res)\n  setexp(`RESULT IS :  ${res}`)\n}\n\n\n}\n\n\nvar bck=()=>{\n  setexp(exp.slice(0, -1))\n}\n\n\n\n  return (\n    <>\n    <div className=\"main\">\n    \n      <div className='box'>\n\n        <div className=\"Title\"> Calculator</div>\n        <div className=\"row\">{exp}\n      <button className=\"backspc\" onClick={bck}><i class=\"fas fa-angle-double-left\"></i></button>\n </div>\n <div className=\"btnrow\">\n   <button onClick={cln} className=\"grey\">AC</button>\n   <button onClick={fn} className=\"grey\">+/-</button>\n   <button onClick={fn} className=\"grey\">%</button>\n   <button onClick={fn} className=\"btnq\">/</button>\n \n \n \n \n </div>\n\n <div className=\"btnrow\">\n   <button onClick={fn} className=\"btn\">1</button>\n   <button onClick={fn} className=\"btn\">2</button>\n   <button onClick={fn} className=\"btn\">3</button>\n   <button onClick={fn} className=\"btnq\">*</button>\n </div>\n\n <div className=\"btnrow\">\n   <button  onClick={fn} className=\"btn\">4</button>\n   <button onClick={fn}  className=\"btn\">5</button>\n   <button  onClick={fn} className=\"btn\">6</button>\n   <button onClick={fn}  className=\"btnq\">-</button>\n \n </div>\n\n\n <div className=\"btnrow\">\n   <button  onClick={fn}  className=\"btn\">7</button>\n   <button  onClick={fn} className=\"btn\">8</button>\n   <button  onClick={fn} className=\"btn\">9</button>\n   <button onClick={fn}  className=\"btnq\">+</button>\n \n </div>\n\n <div className=\"btnrow\">\n   \n   <button  onClick={fn} className=\"btnz\">0</button>\n   <button onClick={fn}  className=\"btn\">.</button>\n   <button onClick={fn}  className=\"btnq\">=</button>\n \n </div>\n\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}